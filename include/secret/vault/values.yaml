vault:
  global:
    enabled: true
#    tlsDisable: false

  injector:
    enabled: false

  ui:
    enabled: true
    activeVaultPodOnly: true

  csi:
    enabled: true
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 256Mi

  server:
    enabled: true
    logLevel: debug
    logFormat: standard
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 256Mi
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      tls:
        - hosts:
            - secrets.trial.studio
          secretName: vault-tls
      hosts:
        - host: secrets.trial.studio
          paths:
            - /

    authDelegator:
      enabled: true

    readinessProbe:
      enabled: false
    livenessProbe:
      enabled: false

    auditStorage:
      enabled: true
      size: 10Gi
      storageClass: openebs-hostpath
    dataStorage:
      enabled: true
      size: 10Gi
      storageClass: openebs-hostpath

    ha:
      enabled: true
      replicas: 3
      raft:
        enabled: true
        setNodeId: true
        config: |
          ui = true
          disable_mlock = true
          
          listener "tcp" {
            tls_disable = true
            address = "[::]:8200"
            cluster_address = "[::]:8201"
          }
          
          storage "raft" {
            path = "/vault/data"
            retry_join {
              leader_api_addr = "http://vault-0.vault-internal:8200"
            }
            retry_join {
              leader_api_addr = "http://vault-1.vault-internal:8200"
            }
            retry_join {
              leader_api_addr = "http://vault-2.vault-internal:8200"
            }
            
            autopilot {
              cleanup_dead_servers = "true"
              last_contact_threshold = "5s"
              last_contact_failure_threshold = "10m"
              max_trailing_logs = 1000
              min_quorum = 3
              server_stabilization_time = "10s"
            }
          
          }
        
          service_registration "kubernetes" {}
